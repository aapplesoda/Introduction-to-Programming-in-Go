package main

import "fmt"

//struct

func main() {
	type Circle struct {
		x float64
		y float64
		r float64
	}
	//fmt.Println(Circle)

	C := new(Circle)
	fmt.Println(C) //{0 0 0}
	//คํา๤ั่งnew จะทําการจองหน่วยความจํา๤ําหรับทุกๆฟิลด์และทําการกําหนดค่าศูนย์ให้กับทุกๆฟิลด์จากนั้นก็ทําการ๤่งpointer (*Circle)  กลับออกมา

	c := Circle{x: 0, y: 0, r: 5}
	// c := Circle{0, 0, 5}
	fmt.Println(c) //{0 0 5}

	var circle Circle
	fmt.Println(circle) //{0 0 0 }
	/*
		การประกาศแบบนี้จะให้ผลเหมือนการประกาศข้อมูลประเภทอื่นๆคือเราจะได้ตัวแปรโลคอลมาหนึ่งตัวที่มีค่าพื้นฐานเท่ากับศูนย์
		โดย๤ําหรับสตรัค๤์แล้วการได้ค่าศูนย์แปลว่าทุกๆฟิลด์ภายใต้สตรัค๤์นั้นจะมีค่าเริ่มต้นตามประเภท
		ของข้อมูลเ๡่น 0 ของint, 0.0 ของfloats, “” ๤ําหรับstring และnil ๤ําหรับpointer
	*/

	//คีย์เวิร์ดtype เป็นตัวที่ใ๡้บอกว่าเรามีไทป์ใหม่
	//จากนั้นเราจะใ๤่๡ื่อไทป์ลงไปโดยตัวอย่างนี้เราใ๡้Circle
	//คีย์เวิร์ดstructมีไว้เพื่อบอกว่าไทป์ใหม่นี้เป็นstruct
	//ภายในเครื่องหมายวงเล็บปีกกาจะเป็นบริเวณที่เรามีไว้เพื่อประกาศฟิลด์ที่อยู่ในสตรัคท์
	//ถ้าเรามีฟิลด์ที่เป็นประเภทเดียวกันหลายๆตัวเราสามารถรวมเป็นกลุ่มไว้เป็นบรรทัดเดียวกันได้
	//x, y, r float64
}

//struct จะใ๡้๤ื่อความ๤ัมพันธ์แบบhas-a
//ใช้รวมเก็บข้อมูลหลายๆประเภท
